# -*- coding: utf-8 -*-
# Задача 1
# На столе лежат n монеток. Некоторые из них лежат вверх решкой, а некоторые – гербом. Определите минимальное число монеток, которые нужно перевернуть, чтобы все монетки были повернуты вверх одной и той же стороной. Выведите минимальное количество монет, которые нужно перевернуть. Количество монет и их положение (0 или 1) пользователь вводит с клавиатуры.
# Примеры/Тесты:
# Введите кол-во монет>? 5
# Положение монеты 0: 0 или 1>? 1
# ...
# 1 0 1 1 0
# Кол-во монет, чтобы перевернуть: 2
# Решение:
num_coins = int(input("Введите кол-во монет: "))
num0 = 0
num1 = 0
for i in range(num_coins):
    coin_posit = int(input(f"Положение монеты {i+1}: 0 или 1: "))
    if coin_posit == 0:
        num0 +=1
    else:
        if coin_posit == 1:
            num1 +=1 
if num0 < num1:
    print(f"Количество монет, чтобы повернуть {num0}")
else:
    print(f"Количество монет, чтобы повернуть {num1}")
# Задача 2
    # Петя и Катя – брат и сестра. Петя – студент, а Катя – школьница. Петя помогает Кате по математике. Он задумывает два натуральных числа X и Y (X,Y≤1000), а Катя должна их отгадать.
# Для этого Петя делает две подсказки. Он называет сумму этих чисел S и их произведение P. Помогите Кате отгадать задуманные Петей числа.

# Примеры/Тесты:
# 4 4 -> 2 2
# 5 6 -> 2 3

# Решение:
sumS = 4
comP = 4

# Задача 3
   # Требуется вывести все целые степени двойки (т.е. числа вида 2^k), не превосходящие числа N.
# Примеры/Тесты:
# 10 ->
# 1
# 2
# 4
# 8
# (*) Усложнение. Вывод оформить в одну строку: числа выводить через запятую. Для этого воспользоваться параметрами функции print

# Примеры/Тесты:
# 10     -> 1,2,4,8,
# 10000  -> 1,2,4,8,16,32,64,128,256,512,1024,2048,4096,8192,

# Решение:

n = 10
i = 0
result = 2
while i <= n:
    max = result**i
    if max < n:
        print(max)
    else:
        break
    i +=1
  